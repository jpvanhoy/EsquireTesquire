<?php

/**
 * Models_Solaria_Base_JobDeponent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $JobDeponentID
 * @property integer $DeponentID
 * @property integer $JobID
 * @property timestamp $DepositionStartTime
 * @property timestamp $DepositionEndTime
 * @property integer $TranscriptStartPage
 * @property integer $TranscriptEndPage
 * @property string $ExhibitBeginNumber
 * @property string $ExhibitEndNumber
 * @property integer $ExhibitPageCount
 * @property boolean $IsReadAndSign
 * @property string $VolumeNumber
 * @property string $TapeNumber
 * @property integer $TranscriptTypeID
 * @property integer $ConfidentialityID
 * @property integer $RoughDraftPageCount
 * @property integer $ExhibitID
 * @property integer $ReadAndSignID
 * @property Models_Solaria_Deponent $Deponent
 * @property Models_Solaria_Job $Job
 * @property Models_Solaria_TranscriptType $TranscriptType
 * @property Models_Solaria_Confidentiality $Confidentiality
 * @property Models_Solaria_Exhibit $Exhibit
 * @property Models_Solaria_ReadAndSign $ReadAndSign
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_JobDeponent extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('JobDeponent');
        $this->hasColumn('JobDeponentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('DeponentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('JobID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DepositionStartTime', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DepositionEndTime', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TranscriptStartPage', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TranscriptEndPage', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExhibitBeginNumber', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExhibitEndNumber', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExhibitPageCount', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsReadAndSign', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('VolumeNumber', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TapeNumber', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TranscriptTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ConfidentialityID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('RoughDraftPageCount', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExhibitID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ReadAndSignID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Deponent as Deponent', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasOne('Models_Solaria_Job as Job', array(
             'local' => 'JobID',
             'foreign' => 'JobID'));

        $this->hasOne('Models_Solaria_TranscriptType as TranscriptType', array(
             'local' => 'TranscriptTypeID',
             'foreign' => 'TranscriptTypeID'));

        $this->hasOne('Models_Solaria_Confidentiality as Confidentiality', array(
             'local' => 'ConfidentialityID',
             'foreign' => 'ConfidentialityID'));

        $this->hasOne('Models_Solaria_Exhibit as Exhibit', array(
             'local' => 'ExhibitID',
             'foreign' => 'ExhibitID'));

        $this->hasOne('Models_Solaria_ReadAndSign as ReadAndSign', array(
             'local' => 'ReadAndSignID',
             'foreign' => 'ReadAndSignID'));
    }
}
