<?php

/**
 * Models_Solaria_Base_StaffCommission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $StaffCommissionID
 * @property integer $StaffID
 * @property integer $ClientID
 * @property integer $StaffInvoiceID
 * @property decimal $OriginalAmountDue
 * @property decimal $CopyAmountDue
 * @property decimal $MiscAmountDue
 * @property integer $AttorneyID
 * @property decimal $AmountPaid
 * @property decimal $Balance
 * @property timestamp $PaidOn
 * @property string $Description
 * @property decimal $AmountDue
 * @property boolean $IsUserOverride
 * @property boolean $IsUserAdded
 * @property integer $ContactID
 * @property integer $CaseID
 * @property integer $ClientInvoiceID
 * @property integer $ClientOrderItemID
 * @property decimal $ClientInvoiceAmount
 * @property string $PayRateTypeCode
 * @property decimal $PayRate
 * @property string $CommissionsOnName
 * @property integer $CommissionsCalcType
 * @property integer $CSDTypeID
 * @property Models_Solaria_Staff $Staff
 * @property Models_Solaria_Client $Client
 * @property Models_Solaria_StaffInvoice $StaffInvoice
 * @property Models_Solaria_Attorney $Attorney
 * @property Models_Solaria_Contact $Contact
 * @property Models_Solaria_Cases $Cases
 * @property Models_Solaria_Invoice $Invoice
 * @property Models_Solaria_OrderItem $OrderItem
 * @property Models_Solaria_CSDType $CSDType
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_StaffCommission extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('StaffCommission');
        $this->hasColumn('StaffCommissionID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('StaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ClientID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffInvoiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('OriginalAmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyAmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscAmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AttorneyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AmountPaid', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Balance', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PaidOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Description', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsUserOverride', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsUserAdded', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ContactID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CaseID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ClientInvoiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ClientOrderItemID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ClientInvoiceAmount', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PayRateTypeCode', 'string', 4, array(
             'type' => 'string',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PayRate', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CommissionsOnName', 'string', 140, array(
             'type' => 'string',
             'length' => '140',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CommissionsCalcType', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CSDTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Staff as Staff', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasOne('Models_Solaria_Client as Client', array(
             'local' => 'ClientID',
             'foreign' => 'ClientID'));

        $this->hasOne('Models_Solaria_StaffInvoice as StaffInvoice', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));

        $this->hasOne('Models_Solaria_Attorney as Attorney', array(
             'local' => 'AttorneyID',
             'foreign' => 'AttorneyID'));

        $this->hasOne('Models_Solaria_Contact as Contact', array(
             'local' => 'ContactID',
             'foreign' => 'ContactID'));

        $this->hasOne('Models_Solaria_Cases as Cases', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasOne('Models_Solaria_Invoice as Invoice', array(
             'local' => 'ClientInvoiceID',
             'foreign' => 'InvoiceID'));

        $this->hasOne('Models_Solaria_OrderItem as OrderItem', array(
             'local' => 'ClientOrderItemID',
             'foreign' => 'OrderItemID'));

        $this->hasOne('Models_Solaria_CSDType as CSDType', array(
             'local' => 'CSDTypeID',
             'foreign' => 'CSDTypeID'));
    }
}
