<?php

/**
 * Models_Solaria_Base_Cases
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $CaseID
 * @property integer $CaseTypeID
 * @property string $CaseDocketNumber
 * @property string $UserReferenceNumber
 * @property string $CaseName
 * @property boolean $IsResponse
 * @property string $PlaintiffResponse
 * @property string $Defendant
 * @property timestamp $TrialDate
 * @property timestamp $EffectiveDate
 * @property timestamp $ExpireDate
 * @property integer $CompanyID
 * @property string $CourtName
 * @property string $ClaimNumber
 * @property string $InvoiceRemarks
 * @property boolean $OverrideProductPrices
 * @property integer $PriceTemplateID
 * @property integer $JurisdictionID
 * @property Models_Solaria_CaseType $CaseType
 * @property Models_Solaria_Company $Company
 * @property Models_Solaria_PriceTemplate $PriceTemplate
 * @property Models_Solaria_Jurisdiction $Jurisdiction
 * @property Doctrine_Collection $AttorneyCase
 * @property Doctrine_Collection $CaseDeliverableOption
 * @property Doctrine_Collection $CaseDeponent
 * @property Doctrine_Collection $CaseECSClient
 * @property Doctrine_Collection $CompanyCase
 * @property Doctrine_Collection $Job
 * @property Doctrine_Collection $StaffClientSales
 * @property Doctrine_Collection $StaffCommission
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_Cases extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Cases');
        $this->hasColumn('CaseID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('CaseTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CaseDocketNumber', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UserReferenceNumber', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CaseName', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsResponse', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PlaintiffResponse', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Defendant', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TrialDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EffectiveDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExpireDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CompanyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CourtName', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ClaimNumber', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('InvoiceRemarks', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('OverrideProductPrices', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PriceTemplateID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('JurisdictionID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_CaseType as CaseType', array(
             'local' => 'CaseTypeID',
             'foreign' => 'CaseTypeID'));

        $this->hasOne('Models_Solaria_Company as Company', array(
             'local' => 'CompanyID',
             'foreign' => 'CompanyID'));

        $this->hasOne('Models_Solaria_PriceTemplate as PriceTemplate', array(
             'local' => 'PriceTemplateID',
             'foreign' => 'PriceTemplateID'));

        $this->hasOne('Models_Solaria_Jurisdiction as Jurisdiction', array(
             'local' => 'JurisdictionID',
             'foreign' => 'JurisdictionID'));

        $this->hasMany('Models_Solaria_AttorneyCase as AttorneyCase', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_CaseDeliverableOption as CaseDeliverableOption', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_CaseDeponent as CaseDeponent', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_CaseECSClient as CaseECSClient', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_CompanyCase as CompanyCase', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_Job as Job', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_StaffClientSales as StaffClientSales', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));

        $this->hasMany('Models_Solaria_StaffCommission as StaffCommission', array(
             'local' => 'CaseID',
             'foreign' => 'CaseID'));
    }
}
