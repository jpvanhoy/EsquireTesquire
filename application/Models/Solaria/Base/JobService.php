<?php

/**
 * Models_Solaria_Base_JobService
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $JobServiceID
 * @property integer $JobID
 * @property integer $ServiceID
 * @property integer $StaffID
 * @property timestamp $ConfirmedOn
 * @property string $ConfirmedBy
 * @property boolean $StaffNotified
 * @property string $ConfirmNote
 * @property integer $JobConfirmStatusID
 * @property boolean $SubmitsInvoices
 * @property string $AffiliateInvoiceStatusSetBy
 * @property integer $AffiliateInvoiceStatusID
 * @property string $AffiliateInvoiceNote
 * @property timestamp $AffiliateInvoiceReceivedOn
 * @property boolean $AffInvServiceWasAdded
 * @property Models_Solaria_Job $Job
 * @property Models_Solaria_Service $Service
 * @property Models_Solaria_Staff $Staff
 * @property Models_Solaria_JobConfirmStatus $JobConfirmStatus
 * @property Models_Solaria_AffiliateInvoiceStatus $AffiliateInvoiceStatus
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_JobService extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('JobService');
        $this->hasColumn('JobServiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('JobID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ServiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ConfirmedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ConfirmedBy', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffNotified', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ConfirmNote', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('JobConfirmStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SubmitsInvoices', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AffiliateInvoiceStatusSetBy', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AffiliateInvoiceStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AffiliateInvoiceNote', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AffiliateInvoiceReceivedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AffInvServiceWasAdded', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Job as Job', array(
             'local' => 'JobID',
             'foreign' => 'JobID'));

        $this->hasOne('Models_Solaria_Service as Service', array(
             'local' => 'ServiceID',
             'foreign' => 'ServiceID'));

        $this->hasOne('Models_Solaria_Staff as Staff', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasOne('Models_Solaria_JobConfirmStatus as JobConfirmStatus', array(
             'local' => 'JobConfirmStatusID',
             'foreign' => 'JobConfirmStatusID'));

        $this->hasOne('Models_Solaria_AffiliateInvoiceStatus as AffiliateInvoiceStatus', array(
             'local' => 'AffiliateInvoiceStatusID',
             'foreign' => 'AffiliateInvoiceStatusID'));
    }
}
