<?php

/**
 * Models_Solaria_Base_StaffInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $StaffInvoiceID
 * @property integer $CompanyID
 * @property integer $StaffID
 * @property integer $JobID
 * @property timestamp $PayDueOn
 * @property decimal $AmountDue
 * @property decimal $AmountPaid
 * @property decimal $Balance
 * @property integer $InvoiceStatus
 * @property string $PrintedComment
 * @property timestamp $EditedOn
 * @property integer $UserID
 * @property boolean $IsVoided
 * @property integer $PrintStaffInvType
 * @property timestamp $PaidOn
 * @property timestamp $CopyPayDueOn
 * @property decimal $CopyAmountDue
 * @property decimal $CopyBalance
 * @property timestamp $MiscPayDueOn
 * @property decimal $MiscAmountDue
 * @property decimal $MiscBalance
 * @property decimal $CopyAmountPaid
 * @property decimal $MiscAmountPaid
 * @property timestamp $CopyPaidOn
 * @property timestamp $MiscPaidOn
 * @property integer $InvoiceTypeID
 * @property timestamp $ExportedOn
 * @property timestamp $OriginalSentOn
 * @property integer $OrigGuaranteeTypeID
 * @property integer $CopyGuaranteeTypeID
 * @property integer $MiscGuaranteeTypeID
 * @property boolean $NGPayIfClientPay
 * @property integer $PayTemplateID
 * @property boolean $NoAutoUpdates
 * @property boolean $IsCommissionsOnly
 * @property integer $CommissionTemplateID
 * @property integer $StaffInvoiceNumber
 * @property string $VendorInvoiceNumber
 * @property timestamp $VendorInvoiceDate
 * @property integer $ReportingPayTemplateID
 * @property integer $ReportingStaffID
 * @property integer $ReportingServiceID
 * @property integer $SchedulingStaffInvoiceID
 * @property string $GLCode
 * @property string $KwikTag
 * @property Models_Solaria_Company $Company
 * @property Models_Solaria_Staff $Staff
 * @property Models_Solaria_Job $Job
 * @property Models_Solaria_SystemUser $SystemUser
 * @property Models_Solaria_InvoiceType $InvoiceType
 * @property Models_Solaria_PayTemplate $PayTemplate
 * @property Models_Solaria_CommissionTemplate $CommissionTemplate
 * @property Doctrine_Collection $StaffCommission
 * @property Doctrine_Collection $StaffExpense
 * @property Doctrine_Collection $StaffInvoiceItem
 * @property Doctrine_Collection $StaffInvoiceOrder
 * @property Doctrine_Collection $StaffOtherPay
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_StaffInvoice extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('StaffInvoice');
        $this->hasColumn('StaffInvoiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('CompanyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('JobID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PayDueOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AmountPaid', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Balance', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('InvoiceStatus', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PrintedComment', 'string', 500, array(
             'type' => 'string',
             'length' => '500',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EditedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UserID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsVoided', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PrintStaffInvType', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PaidOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyPayDueOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyAmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyBalance', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscPayDueOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscAmountDue', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscBalance', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyAmountPaid', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscAmountPaid', 'decimal', 21, array(
             'type' => 'decimal',
             'length' => '21',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyPaidOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscPaidOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('InvoiceTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExportedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('OriginalSentOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('OrigGuaranteeTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CopyGuaranteeTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MiscGuaranteeTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('NGPayIfClientPay', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PayTemplateID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('NoAutoUpdates', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsCommissionsOnly', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CommissionTemplateID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffInvoiceNumber', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('VendorInvoiceNumber', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('VendorInvoiceDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ReportingPayTemplateID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ReportingStaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ReportingServiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SchedulingStaffInvoiceID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('GLCode', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('KwikTag', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Company as Company', array(
             'local' => 'CompanyID',
             'foreign' => 'CompanyID'));

        $this->hasOne('Models_Solaria_Staff as Staff', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasOne('Models_Solaria_Job as Job', array(
             'local' => 'JobID',
             'foreign' => 'JobID'));

        $this->hasOne('Models_Solaria_SystemUser as SystemUser', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasOne('Models_Solaria_InvoiceType as InvoiceType', array(
             'local' => 'InvoiceTypeID',
             'foreign' => 'InvoiceTypeID'));

        $this->hasOne('Models_Solaria_PayTemplate as PayTemplate', array(
             'local' => 'PayTemplateID',
             'foreign' => 'PayTemplateID'));

        $this->hasOne('Models_Solaria_CommissionTemplate as CommissionTemplate', array(
             'local' => 'CommissionTemplateID',
             'foreign' => 'CommissionTemplateID'));

        $this->hasMany('Models_Solaria_StaffCommission as StaffCommission', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));

        $this->hasMany('Models_Solaria_StaffExpense as StaffExpense', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));

        $this->hasMany('Models_Solaria_StaffInvoiceItem as StaffInvoiceItem', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));

        $this->hasMany('Models_Solaria_StaffInvoiceOrder as StaffInvoiceOrder', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));

        $this->hasMany('Models_Solaria_StaffOtherPay as StaffOtherPay', array(
             'local' => 'StaffInvoiceID',
             'foreign' => 'StaffInvoiceID'));
    }
}
