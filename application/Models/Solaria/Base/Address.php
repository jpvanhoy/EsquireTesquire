<?php

/**
 * Models_Solaria_Base_Address
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $AddressID
 * @property integer $AddressTypeID
 * @property string $Address1
 * @property string $Address2
 * @property string $City
 * @property string $StateCode
 * @property string $PostalCode
 * @property string $Country
 * @property timestamp $EffectiveDate
 * @property timestamp $ExpireDate
 * @property string $Address3
 * @property Models_Solaria_AddressType $AddressType
 * @property Models_Solaria_State $State
 * @property Doctrine_Collection $ClientAddress
 * @property Doctrine_Collection $CompanyAddress
 * @property Doctrine_Collection $ConferenceRoom
 * @property Doctrine_Collection $Deponent
 * @property Doctrine_Collection $Job
 * @property Doctrine_Collection $JobLocation
 * @property Doctrine_Collection $StaffAddress
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_Address extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Address');
        $this->hasColumn('AddressID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('AddressTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Address1', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Address2', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('City', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StateCode', 'string', 5, array(
             'type' => 'string',
             'length' => '5',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PostalCode', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Country', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EffectiveDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExpireDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Address3', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_AddressType as AddressType', array(
             'local' => 'AddressTypeID',
             'foreign' => 'AddressTypeID'));

        $this->hasOne('Models_Solaria_State as State', array(
             'local' => 'StateCode',
             'foreign' => 'StateCode'));

        $this->hasMany('Models_Solaria_ClientAddress as ClientAddress', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_CompanyAddress as CompanyAddress', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_ConferenceRoom as ConferenceRoom', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_Deponent as Deponent', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_Job as Job', array(
             'local' => 'AddressID',
             'foreign' => 'ClientAddressID'));

        $this->hasMany('Models_Solaria_JobLocation as JobLocation', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_StaffAddress as StaffAddress', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));
    }
}
