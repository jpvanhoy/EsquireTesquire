<?php

/**
 * Models_Solaria_Base_Task
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $TaskID
 * @property integer $CompanyID
 * @property integer $TaskNumber
 * @property integer $DueDays
 * @property integer $IsAfter
 * @property integer $IsDeliveryDate
 * @property integer $DepartmentID
 * @property boolean $SendEmail
 * @property boolean $IsRequired
 * @property integer $JobStatusID
 * @property integer $TaskOrigNumber
 * @property string $Description
 * @property boolean $IsActive
 * @property Models_Solaria_Company $Company
 * @property Models_Solaria_Department $Department
 * @property Models_Solaria_JobStatus $JobStatus
 * @property Doctrine_Collection $JobTask
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_Task extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Task');
        $this->hasColumn('TaskID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('CompanyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TaskNumber', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DueDays', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsAfter', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsDeliveryDate', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DepartmentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SendEmail', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsRequired', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('JobStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TaskOrigNumber', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Description', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsActive', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Company as Company', array(
             'local' => 'CompanyID',
             'foreign' => 'CompanyID'));

        $this->hasOne('Models_Solaria_Department as Department', array(
             'local' => 'DepartmentID',
             'foreign' => 'DepartmentID'));

        $this->hasOne('Models_Solaria_JobStatus as JobStatus', array(
             'local' => 'JobStatusID',
             'foreign' => 'JobStatusID'));

        $this->hasMany('Models_Solaria_JobTask as JobTask', array(
             'local' => 'TaskID',
             'foreign' => 'TaskID'));
    }
}
