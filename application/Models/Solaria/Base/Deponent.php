<?php

/**
 * Models_Solaria_Base_Deponent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $DeponentID
 * @property integer $PersonID
 * @property integer $ExpertiseTypeID
 * @property string $EmployedBy
 * @property boolean $IsExpert
 * @property integer $AddressID
 * @property string $PersonalNum
 * @property timestamp $IncidentDate
 * @property string $Notes
 * @property Models_Solaria_Person $Person
 * @property Models_Solaria_ExpertiseType $ExpertiseType
 * @property Models_Solaria_Address $Address
 * @property Doctrine_Collection $CaseDeponent
 * @property Doctrine_Collection $InvoiceDeponent
 * @property Doctrine_Collection $JobAttorneyDeponent
 * @property Doctrine_Collection $JobDeponent
 * @property Doctrine_Collection $JobProductTask
 * @property Doctrine_Collection $OrderItem
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_Deponent extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Deponent');
        $this->hasColumn('DeponentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('PersonID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExpertiseTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EmployedBy', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsExpert', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AddressID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PersonalNum', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IncidentDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Notes', 'string', 1000, array(
             'type' => 'string',
             'length' => '1000',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_Person as Person', array(
             'local' => 'PersonID',
             'foreign' => 'PersonID'));

        $this->hasOne('Models_Solaria_ExpertiseType as ExpertiseType', array(
             'local' => 'ExpertiseTypeID',
             'foreign' => 'ExpertiseTypeID'));

        $this->hasOne('Models_Solaria_Address as Address', array(
             'local' => 'AddressID',
             'foreign' => 'AddressID'));

        $this->hasMany('Models_Solaria_CaseDeponent as CaseDeponent', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasMany('Models_Solaria_InvoiceDeponent as InvoiceDeponent', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasMany('Models_Solaria_JobAttorneyDeponent as JobAttorneyDeponent', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasMany('Models_Solaria_JobDeponent as JobDeponent', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasMany('Models_Solaria_JobProductTask as JobProductTask', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));

        $this->hasMany('Models_Solaria_OrderItem as OrderItem', array(
             'local' => 'DeponentID',
             'foreign' => 'DeponentID'));
    }
}
