<?php

/**
 * Models_Solaria_Base_SystemUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $UserID
 * @property string $LoginName
 * @property string $Password
 * @property string $UserName
 * @property boolean $IsMasterUser
 * @property boolean $IsActive
 * @property string $LastCompanyScheduleView
 * @property string $LastStaffScheduleView
 * @property boolean $ShowCompanyCanceled
 * @property boolean $ShowStaffCanceled
 * @property integer $ListJobStatusID
 * @property timestamp $ListJobStartDate
 * @property timestamp $ListJobEndDate
 * @property integer $ListJobDateOption
 * @property integer $ListOrderStatusID
 * @property timestamp $ListOrderStartDate
 * @property timestamp $ListOrderEndDate
 * @property integer $ListOrderDateOption
 * @property integer $ListInvStatusID
 * @property timestamp $ListInvStartDate
 * @property timestamp $ListInvEndDate
 * @property integer $ListInvDateOption
 * @property integer $ListStaffInvStatusID
 * @property timestamp $ListStaffInvStartDate
 * @property timestamp $ListStaffInvEndDate
 * @property integer $ListStaffInvDateOption
 * @property integer $ListTransStatusID
 * @property timestamp $ListTransStartDate
 * @property timestamp $ListTransEndDate
 * @property integer $ListTransDateOption
 * @property integer $SystemRoleID
 * @property boolean $ShowCompanyColor
 * @property boolean $ShowStaffColor
 * @property string $ListAttyOption
 * @property string $ListClientOption
 * @property string $ListCaseOption
 * @property boolean $ShowJobsCanceled
 * @property boolean $ShowOrdersVoided
 * @property boolean $ShowInvoicesVoided
 * @property boolean $ShowStaffInvVoided
 * @property boolean $ShowTransVoided
 * @property integer $ListInvDateType
 * @property integer $ListStaffInvDateType
 * @property boolean $ShowJobsAllCompanies
 * @property boolean $ShowStaffAssgnPagesDue
 * @property string $ListStaffOption
 * @property integer $ListCollStatusID
 * @property integer $DefaultCompanyID
 * @property boolean $ShowTransAlCompanies
 * @property timestamp $ListCollStartDate
 * @property timestamp $ListCollEndDate
 * @property boolean $ShowCollAllCompanies
 * @property integer $ListCollCollectorStaffID
 * @property boolean $ShowCompanyJobs
 * @property boolean $ShowCompanyOtherItems
 * @property boolean $ShowStaffJobs
 * @property boolean $ShowStaffOtherItems
 * @property integer $DefaultCalendarCompany
 * @property integer $DefaultCalendarDateType
 * @property boolean $IsComplete
 * @property string $SelectedCompanies
 * @property boolean $CollExcludePaid
 * @property timestamp $LastLoggedOn
 * @property timestamp $PasswordChangedOn
 * @property string $EmailAddress
 * @property integer $DefaultJobSearchOption
 * @property Models_Solaria_SystemRole $SystemRole
 * @property Doctrine_Collection $EditLog
 * @property Doctrine_Collection $Invoice
 * @property Doctrine_Collection $Job
 * @property Doctrine_Collection $JobCheckIn
 * @property Doctrine_Collection $JobProductTask
 * @property Doctrine_Collection $JobTask
 * @property Doctrine_Collection $ListPosition
 * @property Doctrine_Collection $Notes
 * @property Doctrine_Collection $Orders
 * @property Doctrine_Collection $PayTemplate
 * @property Doctrine_Collection $PriceTemplate
 * @property Doctrine_Collection $Staff
 * @property Doctrine_Collection $StaffInvoice
 * @property Doctrine_Collection $TaskHistory
 * @property Doctrine_Collection $Transactions
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_SystemUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('SystemUser');
        $this->hasColumn('UserID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('LoginName', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Password', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UserName', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsMasterUser', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsActive', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('LastCompanyScheduleView', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('LastStaffScheduleView', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowCompanyCanceled', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffCanceled', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListJobStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListJobStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListJobEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListJobDateOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListOrderStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListOrderStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListOrderEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListOrderDateOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListInvStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListInvStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListInvEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListInvDateOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffInvStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffInvStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffInvEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffInvDateOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListTransStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListTransStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListTransEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListTransDateOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SystemRoleID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowCompanyColor', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffColor', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListAttyOption', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListClientOption', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListCaseOption', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowJobsCanceled', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowOrdersVoided', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowInvoicesVoided', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffInvVoided', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowTransVoided', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListInvDateType', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffInvDateType', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowJobsAllCompanies', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffAssgnPagesDue', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListStaffOption', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListCollStatusID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DefaultCompanyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowTransAlCompanies', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListCollStartDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListCollEndDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowCollAllCompanies', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ListCollCollectorStaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowCompanyJobs', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowCompanyOtherItems', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffJobs', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ShowStaffOtherItems', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DefaultCalendarCompany', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DefaultCalendarDateType', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsComplete', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SelectedCompanies', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CollExcludePaid', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('LastLoggedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PasswordChangedOn', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EmailAddress', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DefaultJobSearchOption', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_SystemRole as SystemRole', array(
             'local' => 'SystemRoleID',
             'foreign' => 'SystemRoleID'));

        $this->hasMany('Models_Solaria_EditLog as EditLog', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Invoice as Invoice', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Job as Job', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_JobCheckIn as JobCheckIn', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_JobProductTask as JobProductTask', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_JobTask as JobTask', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_ListPosition as ListPosition', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Notes as Notes', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Orders as Orders', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_PayTemplate as PayTemplate', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_PriceTemplate as PriceTemplate', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Staff as Staff', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_StaffInvoice as StaffInvoice', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_TaskHistory as TaskHistory', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasMany('Models_Solaria_Transactions as Transactions', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));
    }
}
