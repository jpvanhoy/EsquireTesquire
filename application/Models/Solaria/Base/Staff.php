<?php

/**
 * Models_Solaria_Base_Staff
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $StaffID
 * @property integer $PayGroupTypeID
 * @property integer $GuaranteeTypeID
 * @property integer $PersonID
 * @property integer $StaffTypeID
 * @property integer $DepartmentID
 * @property string $TaxID
 * @property string $CSRNumber
 * @property string $SSN
 * @property timestamp $HireDate
 * @property integer $UserID
 * @property integer $PayTemplateID
 * @property boolean $OverrideProductPay
 * @property string $CertsAbbrev
 * @property string $Certifications
 * @property boolean $ViewAllOrderTasks
 * @property integer $InvoiceTypeID
 * @property boolean $NGPayIfClientPay
 * @property string $InvoiceRemarks
 * @property boolean $EmailCopyForCommissions
 * @property string $DoingBusinessAs
 * @property string $ADPFileNumber
 * @property integer $PaidThrough
 * @property integer $CheckType
 * @property integer $MasterDepartmentID
 * @property string $GLCode
 * @property boolean $IsNotBilled
 * @property boolean $SubmitsInvoices
 * @property Models_Solaria_PayGroupType $PayGroupType
 * @property Models_Solaria_GuaranteeType $GuaranteeType
 * @property Models_Solaria_Person $Person
 * @property Models_Solaria_StaffType $StaffType
 * @property Doctrine_Collection $Department
 * @property Models_Solaria_SystemUser $SystemUser
 * @property Models_Solaria_PayTemplate $PayTemplate
 * @property Models_Solaria_InvoiceType $InvoiceType
 * @property Models_Solaria_MasterDepartment $MasterDepartment
 * @property Doctrine_Collection $AttorneyStaffPrefs
 * @property Doctrine_Collection $Collection
 * @property Doctrine_Collection $JobCheckIn
 * @property Doctrine_Collection $JobProductTask
 * @property Doctrine_Collection $JobService
 * @property Doctrine_Collection $JobTask
 * @property Doctrine_Collection $Notes
 * @property Doctrine_Collection $StaffAddress
 * @property Doctrine_Collection $StaffClientSales
 * @property Doctrine_Collection $StaffCommission
 * @property Doctrine_Collection $StaffExpense
 * @property Doctrine_Collection $StaffGuarantee
 * @property Doctrine_Collection $StaffInvoice
 * @property Doctrine_Collection $StaffInvoiceItem
 * @property Doctrine_Collection $StaffJobPayTemplate
 * @property Doctrine_Collection $StaffOtherPay
 * @property Doctrine_Collection $StaffPersonalTime
 * @property Doctrine_Collection $StaffService
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Solaria_Base_Staff extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Staff');
        $this->hasColumn('StaffID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('PayGroupTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('GuaranteeTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PersonID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('StaffTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DepartmentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TaxID', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CSRNumber', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SSN', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('HireDate', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UserID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PayTemplateID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('OverrideProductPay', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CertsAbbrev', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Certifications', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ViewAllOrderTasks', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('InvoiceTypeID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('NGPayIfClientPay', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('InvoiceRemarks', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('EmailCopyForCommissions', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DoingBusinessAs', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ADPFileNumber', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('PaidThrough', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CheckType', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('MasterDepartmentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('GLCode', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('IsNotBilled', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SubmitsInvoices', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '((0))',
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Solaria_PayGroupType as PayGroupType', array(
             'local' => 'PayGroupTypeID',
             'foreign' => 'PayGroupTypeID'));

        $this->hasOne('Models_Solaria_GuaranteeType as GuaranteeType', array(
             'local' => 'GuaranteeTypeID',
             'foreign' => 'GuaranteeTypeID'));

        $this->hasOne('Models_Solaria_Person as Person', array(
             'local' => 'PersonID',
             'foreign' => 'PersonID'));

        $this->hasOne('Models_Solaria_StaffType as StaffType', array(
             'local' => 'StaffTypeID',
             'foreign' => 'StaffTypeID'));

        $this->hasMany('Models_Solaria_Department as Department', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasOne('Models_Solaria_SystemUser as SystemUser', array(
             'local' => 'UserID',
             'foreign' => 'UserID'));

        $this->hasOne('Models_Solaria_PayTemplate as PayTemplate', array(
             'local' => 'PayTemplateID',
             'foreign' => 'PayTemplateID'));

        $this->hasOne('Models_Solaria_InvoiceType as InvoiceType', array(
             'local' => 'InvoiceTypeID',
             'foreign' => 'InvoiceTypeID'));

        $this->hasOne('Models_Solaria_MasterDepartment as MasterDepartment', array(
             'local' => 'MasterDepartmentID',
             'foreign' => 'MasterDepartmentID'));

        $this->hasMany('Models_Solaria_AttorneyStaffPrefs as AttorneyStaffPrefs', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_Collection as Collection', array(
             'local' => 'StaffID',
             'foreign' => 'CollectorStaffID'));

        $this->hasMany('Models_Solaria_JobCheckIn as JobCheckIn', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_JobProductTask as JobProductTask', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_JobService as JobService', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_JobTask as JobTask', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_Notes as Notes', array(
             'local' => 'StaffID',
             'foreign' => 'AssignedStaffID'));

        $this->hasMany('Models_Solaria_StaffAddress as StaffAddress', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffClientSales as StaffClientSales', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffCommission as StaffCommission', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffExpense as StaffExpense', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffGuarantee as StaffGuarantee', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffInvoice as StaffInvoice', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffInvoiceItem as StaffInvoiceItem', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffJobPayTemplate as StaffJobPayTemplate', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffOtherPay as StaffOtherPay', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffPersonalTime as StaffPersonalTime', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));

        $this->hasMany('Models_Solaria_StaffService as StaffService', array(
             'local' => 'StaffID',
             'foreign' => 'StaffID'));
    }
}
