<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Models_Intranet_SummaryQueue', 'intranet');

/**
 * Models_Intranet_Base_SummaryQueue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $job_id
 * @property integer $job_number
 * @property integer $solaria_company_id
 * @property integer $intranet_company_id
 * @property integer $status_id
 * @property timestamp $queued_date
 * @property integer $priority_id
 * @property integer $dlman_jobdata_id
 * @property timestamp $client_due_date
 * @property timestamp $turnin_date
 * @property integer $additional_order
 * @property boolean $senior_check_in
 * @property timestamp $checked_out_time
 * @property timestamp $checked_in_time
 * @property integer $check_out_user_id
 * @property boolean $needs_exhibits_work
 * @property integer $release_attempts
 * @property Models_Intranet_DlmanJobdata $DlmanJobdata
 * @property Models_Intranet_SummaryQueuePriority $SummaryQueuePriority
 * @property Models_Intranet_SummaryQueueStatus $SummaryQueueStatus
 * @property Doctrine_Collection $SummaryQueueDeponent
 * @property Doctrine_Collection $SummaryQueueForceCompleteLog
 * @property Doctrine_Collection $SummaryQueueNotes
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Intranet_Base_SummaryQueue extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('summary_queue');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('job_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('job_number', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('solaria_company_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('intranet_company_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('queued_date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('priority_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('dlman_jobdata_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('client_due_date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('turnin_date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('additional_order', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('senior_check_in', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('checked_out_time', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('checked_in_time', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('check_out_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('needs_exhibits_work', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => '1',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('release_attempts', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Models_Intranet_DlmanJobdata as DlmanJobdata', array(
             'local' => 'dlman_jobdata_id',
             'foreign' => 'id'));

        $this->hasOne('Models_Intranet_SummaryQueuePriority as SummaryQueuePriority', array(
             'local' => 'priority_id',
             'foreign' => 'id'));

        $this->hasOne('Models_Intranet_SummaryQueueStatus as SummaryQueueStatus', array(
             'local' => 'status_id',
             'foreign' => 'id'));

        $this->hasMany('Models_Intranet_SummaryQueueDeponent as SummaryQueueDeponent', array(
             'local' => 'id',
             'foreign' => 'summary_queue_id'));

        $this->hasMany('Models_Intranet_SummaryQueueForceCompleteLog as SummaryQueueForceCompleteLog', array(
             'local' => 'id',
             'foreign' => 'summary_queue_id'));

        $this->hasMany('Models_Intranet_SummaryQueueNotes as SummaryQueueNotes', array(
             'local' => 'id',
             'foreign' => 'summary_queue_id'));
    }
}