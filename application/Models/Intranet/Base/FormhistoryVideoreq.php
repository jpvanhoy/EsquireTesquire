<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Models_Intranet_FormhistoryVideoreq', 'intranet');

/**
 * Models_Intranet_Base_FormhistoryVideoreq
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $IDNumber
 * @property timestamp $Submit_Date
 * @property string $Name
 * @property string $Email
 * @property string $Phone
 * @property string $Extra_Contact_Info
 * @property string $Firm
 * @property string $Client
 * @property string $Contact_Person
 * @property string $Ship_To
 * @property string $ESQ_Loc
 * @property string $ESQ_Region
 * @property string $AssignNum
 * @property string $Crossover_Loc
 * @property string $Crossover_AssignNum
 * @property timestamp $Job_Date
 * @property timestamp $Turnin_Date
 * @property string $Deponet
 * @property timestamp $DeadLine_1
 * @property timestamp $DeadLine_2
 * @property timestamp $DeadLine_3
 * @property string $Req_Category
 * @property string $Notes
 * @property string $TransStatus
 * @property string $ExhibStatus
 * @property string $TrackingNum
 * @property string $Shipped_Via
 * @property string $Delivery_Preference
 * @property string $Format_Preference
 * @property string $TransReady
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Models_Intranet_Base_FormhistoryVideoreq extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('formhistory_videoreq');
        $this->hasColumn('IDNumber', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('Submit_Date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Name', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Email', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Phone', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Extra_Contact_Info', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Firm', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Client', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Contact_Person', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Ship_To', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ESQ_Loc', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ESQ_Region', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('AssignNum', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Crossover_Loc', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Crossover_AssignNum', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Job_Date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Turnin_Date', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Deponet', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DeadLine_1', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DeadLine_2', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DeadLine_3', 'timestamp', 16, array(
             'type' => 'timestamp',
             'length' => '16',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Req_Category', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(NULL)',
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Notes', 'string', 2147483647, array(
             'type' => 'string',
             'length' => '2147483647',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TransStatus', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ExhibStatus', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TrackingNum', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Shipped_Via', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Delivery_Preference', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('Format_Preference', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TransReady', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}